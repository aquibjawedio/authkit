/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthResendRouteImport } from './routes/auth/resend'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotRouteImport } from './routes/auth/forgot'
import { Route as AuthVerifyTokenRouteImport } from './routes/auth/verify/$token'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResendRoute = AuthResendRouteImport.update({
  id: '/auth/resend',
  path: '/auth/resend',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotRoute = AuthForgotRouteImport.update({
  id: '/auth/forgot',
  path: '/auth/forgot',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyTokenRoute = AuthVerifyTokenRouteImport.update({
  id: '/auth/verify/$token',
  path: '/auth/verify/$token',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/auth/forgot': typeof AuthForgotRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/resend': typeof AuthResendRoute
  '/auth/verify/$token': typeof AuthVerifyTokenRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/auth/forgot': typeof AuthForgotRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/resend': typeof AuthResendRoute
  '/auth/verify/$token': typeof AuthVerifyTokenRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/auth/forgot': typeof AuthForgotRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/resend': typeof AuthResendRoute
  '/auth/verify/$token': typeof AuthVerifyTokenRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/auth/forgot'
    | '/auth/login'
    | '/auth/register'
    | '/auth/resend'
    | '/auth/verify/$token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/auth/forgot'
    | '/auth/login'
    | '/auth/register'
    | '/auth/resend'
    | '/auth/verify/$token'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/auth/forgot'
    | '/auth/login'
    | '/auth/register'
    | '/auth/resend'
    | '/auth/verify/$token'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  AuthForgotRoute: typeof AuthForgotRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResendRoute: typeof AuthResendRoute
  AuthVerifyTokenRoute: typeof AuthVerifyTokenRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/resend': {
      id: '/auth/resend'
      path: '/auth/resend'
      fullPath: '/auth/resend'
      preLoaderRoute: typeof AuthResendRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot': {
      id: '/auth/forgot'
      path: '/auth/forgot'
      fullPath: '/auth/forgot'
      preLoaderRoute: typeof AuthForgotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify/$token': {
      id: '/auth/verify/$token'
      path: '/auth/verify/$token'
      fullPath: '/auth/verify/$token'
      preLoaderRoute: typeof AuthVerifyTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  AuthForgotRoute: AuthForgotRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResendRoute: AuthResendRoute,
  AuthVerifyTokenRoute: AuthVerifyTokenRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
