generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  MOD
  ADMIN
}

enum UserStatus {
  ACTIVE
  SUSPENDED
  BANNED
  DEACTIVATED
}

model User {
  id                        String     @id @default(uuid())
  fullname                  String
  username                  String     @unique
  email                     String     @unique
  password                  String
  role                      UserRole   @default(USER)
  avatarUrl                 String?
  bio                       String?
  socialMedia               Json?
  isEmailVerified           Boolean    @default(false)
  emailVerificationToken    String?
  emailVerificationExpiry   DateTime?
  forgotPasswordToken       String?
  forgotPasswordExpiry      DateTime?
  lastLogin                 DateTime?
  loginAttempts             Int        @default(0)
  lockoutExpiry             DateTime?
  status                    UserStatus @default(ACTIVE)
  emailNotificationsEnabled Boolean    @default(true)
  isDeleted                 Boolean    @default(false)
  deletedAt                 DateTime?
  createdAt                 DateTime   @default(now())
  updatedAt                 DateTime   @updatedAt
  sessions                  Session[]

  @@index([email])
  @@index([username])
  @@index([role])
  @@index([status])
}

model Session {
  id           String    @id @default(uuid())
  refreshToken String    @unique
  ipAddress    String
  userAgent    String
  device       String
  os           String
  browser      String
  location     String
  timezone     String
  language     String
  isRevoked    Boolean   @default(false)
  user         User      @relation(fields: [userId], references: [id])
  userId       String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  expiresAt    DateTime?

  @@index([userId])
  @@index([refreshToken])
}
